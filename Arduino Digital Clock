// Date, Time and Alarm functions using a DS3231 RTC connected via I2C and Wire lib
#include "Wire.h"
#include "SPI.h"  
#include "RTClib.h"
#include <LiquidCrystal.h>
RTC_DS3231 RTC;
LiquidCrystal lcd(12, 11, 5, 4, 3, 2);
const int buzzerPin = 9;
const int buttonPin1 = 6;
const int buttonPin2 = 7;
int buttonState1 = 0;
int lastButtonState1 = 0;  
int buttonState2 = 0;
int lastButtonState2 = 0;
int h=0 ;
int m=0 ;

void setup () {
  lcd.begin(16, 2);
  Wire.begin();
  RTC.begin();
  pinMode(buzzerPin, OUTPUT);
  
  pinMode(buttonPin1, INPUT);
  pinMode(buttonPin2, INPUT);
  //RTC.adjust(DateTime(__DATE__, __TIME__));
  if (! RTC.isrunning()) {
    Serial.println("RTC is NOT running!");
    // following line sets the RTC to the date & time this sketch was compiled
    RTC.adjust(DateTime(__DATE__, __TIME__));
  }
  DateTime now = RTC.now();
}
void loop () {
  RTC.setAlarm1Simple(h, m);
  RTC.turnOnAlarm(1);
  DateTime now = RTC.now();
  if (RTC.checkIfAlarm(1)) {
    int frequencies=3000;
    tone(buzzerPin,frequencies,60000);
  }
  // read the pushbutton input pin:
  buttonState1 = digitalRead(buttonPin1);
  buttonState2 = digitalRead(buttonPin2);
  // compare the buttonState to its previous state
  if (buttonState1 != lastButtonState1) {
    if (buttonState1 == HIGH) {
      m++;
      if(m>59){m=0;}
    } 
    delay(200);
  }
  if (buttonState2 != lastButtonState2) {
    if (buttonState2 == HIGH) {
      h++;
      if(h>23){h=0;}
    } 
    delay(200);
  }

  lcd.setCursor(0, 0);
  //lcd.print("   ");
  lcd.print(now.day(), DEC);
  lcd.print('-');
  lcd.print(now.month(), DEC);
  lcd.print('-');
  lcd.print(now.year(), DEC);
  lcd.print(' ');
  if(h < 10){           // Zero padding if value less than 10 ie."09" instead of "9"
     lcd.print("0");
   }
  lcd.print(h,DEC);
  lcd.print(':');
  if(m < 10){           // Zero padding if value less than 10 ie."09" instead of "9"
     lcd.print("0");
   }
  lcd.print(m,DEC);
  lcd.setCursor(0, 1);
  if(now.hour() < 10){           // Zero padding if value less than 10 ie."09" instead of "9"
     lcd.print("0");
   }
  lcd.print(now.hour(), DEC);
  lcd.print(':');
  if(now.minute() < 10){           // Zero padding if value less than 10 ie."09" instead of "9"
     lcd.print("0");
   }
  lcd.print(now.minute(), DEC);
  lcd.print(':');
  if(now.second() < 10){           // Zero padding if value less than 10 ie."09" instead of "9"
     lcd.print("0");
   }
  lcd.print(now.second(), DEC);
  lcd.print(' ');
  lcd.print(RTC.getTemperature()); 
  lcd.println("'C ");
}
