----Download  Code ด้านล่างลง IC Attiny85----
// NeoPixel Ring simple sketch (c) 2013 Shae Erisson
// released under the GPLv3 license to match the rest of the AdaFruit NeoPixel library
#include <Adafruit_NeoPixel.h>
#ifdef __AVR__
  #include <avr/power.h>
#endif
// Which pin on the Arduino is connected to the NeoPixels?
// On a Trinket or Gemma we suggest changing this to 1
#define PIN            1
// How many NeoPixels are attached to the Arduino?
#define NUMPIXELS      12
// When we setup the NeoPixel library, we tell it how many pixels, and which pin to use to send signals.
// Note that for older NeoPixel strips you might need to change the third parameter--see the strandtest
// example for more information on possible values.
Adafruit_NeoPixel pixels = Adafruit_NeoPixel(NUMPIXELS, PIN, NEO_GRB + NEO_KHZ800);
int delayval = 1; // delay for half a second
//mycode
  bool offA=true;
  bool offB=true;
  bool redwon=false;
  bool bluewon=false;
  int scoreA=NUMPIXELS/2;
  int scoreB=NUMPIXELS/2  ;
  int sumscore=NUMPIXELS;
  int sensorVal1 = digitalRead(3);
  int sensorVal2 = digitalRead(4);
  //mycode
void setup() {
  pinMode(3,INPUT);
  pinMode(4,INPUT);
  digitalWrite(3,HIGH);
  digitalWrite(4,HIGH);
  // This is for Trinket 5V 16MHz, you can remove these three lines if you are not using a Trinket
#if defined (__AVR_ATtiny85__)
  if (F_CPU == 16000000) clock_prescale_set(clock_div_1);
#endif
  // End of trinket special code
  pixels.begin(); // This initializes the NeoPixel library.
}
void loop() {
  sensorVal1 = digitalRead(3);
  sensorVal2 = digitalRead(4);
  if(scoreA==12) redwon=true;
  if(scoreB==12) bluewon=true;
  if(sensorVal1 == LOW&&offA==true){
    if(scoreA+scoreB==sumscore&&scoreB!=0){
      scoreA++;
      scoreB--;
    }
    else if(scoreA+scoreB!=sumscore) scoreA++;
    offA=false;
  }
  
  if(sensorVal2 == LOW&&offB==true){
    if(scoreA+scoreB==sumscore&&scoreA!=0){
      scoreA--;
      scoreB++;
    }
    else if(scoreA+scoreB!=sumscore) scoreB++;
    offB=false;
  }
  sensorVal1 = digitalRead(3);
  sensorVal2 = digitalRead(4);
  if(sensorVal2 == HIGH) offB=true;
  if(sensorVal1 == HIGH) offA=true;
  delay(50);
  
  
  
  // put your main code here, to run repeatedly:
  // For a set of NeoPixels the first NeoPixel is 0, second is 1, all the way up to the count of pixels minus one.
  for(int i=0;i<NUMPIXELS;i++){
    if(bluewon==true){
      won(150,0,0);
    }
    if(redwon==true){
        won(0,0,150);
    }
    if(i<scoreA&&(redwon==false||bluewon==false)){
      pixels.setPixelColor(i, pixels.Color(0,0,150)); // Moderately bright green color.
      pixels.show(); // This sends the updated pixel color to the hardware.
    }
    if(i>=(sumscore-scoreB)&&(redwon==false||bluewon==false)){
      pixels.setPixelColor(i, pixels.Color(150,0,0)); // Moderately bright green color.
      pixels.show(); // This sends the updated pixel color to the hardware.
    }
    if(i<(sumscore-scoreB)&&i>=scoreA&&(redwon==false||bluewon==false)){
      pixels.setPixelColor(i, pixels.Color(0,0,0)); // Moderately bright green color.
      pixels.show(); 
    }
