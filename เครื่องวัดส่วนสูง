const int pingPin = 7;//sensor
int inPin = 6;//sensor
long duration, cm, h, m;

const int buttonPin1 = 2;
const int buttonPin2 = 3;

int soundPin = 5;
int selecPin = 4;

int dataPin = 13;//7segment
int clockPin = 11;//7segment
int latchPin = 12;//7segment
byte dataRED;
byte dataArrayRED[11];


int set;
int a=0,b=0,c=0;
int buttonState = 0; 
/////////////////////////////////////////////////////////////
void setup() {
  //Serial.begin(9600);
  
  pinMode(soundPin, OUTPUT);
  pinMode(selecPin, OUTPUT);
  pinMode(buttonPin1, INPUT);
  pinMode(buttonPin2, INPUT);
  
  pinMode(latchPin, OUTPUT);//7segment
  dataArrayRED[0] = 0xC0; // - 0
  dataArrayRED[1] = 0xF9; // - 1
  dataArrayRED[2] = 0xA4; // - 2
  dataArrayRED[3] = 0xB0; // - 3
  dataArrayRED[4] = 0x99; // - 4
  dataArrayRED[5] = 0x92; // - 5
  dataArrayRED[6] = 0x82; // - 6
  dataArrayRED[7] = 0xF8; // - 7
  dataArrayRED[8] = 0x80; // - 8
  dataArrayRED[9] = 0x90; // - 9
  dataArrayRED[10] = 0xBF; // - ---

}

/////////////////////////////////////////////////////////////
void soundOut(){
  digitalWrite(soundPin, HIGH);  
  delay (1000);  
  digitalWrite(soundPin, LOW);
   delay (10);
}
/////////////////////////////////////////////////////////////
void pingSet(){
  pinMode(pingPin, OUTPUT);
  digitalWrite(pingPin, LOW);
  delayMicroseconds(2);
  digitalWrite(pingPin, HIGH);
  delayMicroseconds(5);
  digitalWrite(pingPin, LOW); 
}
/////////////////////////////////////////////////////////////
void loop()
{
   buttonState = digitalRead(buttonPin1);
   
  pinMode(inPin, INPUT); 
  long duration, cm, h;
  pingSet();
  duration = pulseIn(inPin, HIGH);
  cm = microsecondsToCentimeters(duration);
  h=cm;
  
  
   if (buttonState == HIGH) { 
   digitalWrite(selecPin, HIGH);   
   delay(2000);
   m=cm;
   digitalWrite(selecPin, LOW);
   set++;
   }//if 
  
              if(cm < m)
              {
              delay(5000);
                long duration, inches, cm;
                pingSet();
                pinMode(inPin, INPUT);
                duration = pulseIn(inPin, HIGH);
                cm = microsecondsToCentimeters(duration);
                    if(cm < m)
                    {
                        //for(int i=0;i<3;i++){
                        //  pingSet();
                        //  duration = pulseIn(inPin, HIGH);
                        //  cm = microsecondsToCentimeters(duration);
                            cm = (m-cm);
                        //  h = h+cm;                     
                        //}//for    
                    // h = h/3;
                    
                     h = cm;
                     number(h); 
                     soundOut();
                     
                     digitalWrite(latchPin, 0);
                     shiftOut(dataPin, clockPin, dataArrayRED[ a ]);
                     digitalWrite(latchPin, 1);
                              digitalWrite(latchPin, 0);
                              shiftOut(dataPin, clockPin, dataArrayRED[ b ]);
                              digitalWrite(latchPin, 1);
                                      digitalWrite(latchPin, 0);
                                      shiftOut(dataPin, clockPin, dataArrayRED[ c ]);
                                      digitalWrite(latchPin, 1);
                                          //Serial.print(a);Serial.print(b);Serial.print(c);
                                          //Serial.println();
                                          delay(1000);  soundOut();  delay(1000);  soundOut();  delay(1000);  soundOut();
                                          delay(1000);  soundOut();  delay(1000);  soundOut();  delay(1000);  soundOut();
                    }//if    
              }//if
  number(h);
  if(set == 0){
  digitalWrite(latchPin, 0);
  shiftOut(dataPin, clockPin, dataArrayRED[ a ]);
  digitalWrite(latchPin, 1);
       digitalWrite(latchPin, 0);
       shiftOut(dataPin, clockPin, dataArrayRED[ b ]);
       digitalWrite(latchPin, 1);
            digitalWrite(latchPin, 0);
            shiftOut(dataPin, clockPin, dataArrayRED[ c ]);
            digitalWrite(latchPin, 1);
               //Serial.print(cm);
  }//if
    else{
    digitalWrite(latchPin, 0);
    shiftOut(dataPin, clockPin, dataArrayRED[ 10 ]);
    digitalWrite(latchPin, 1); 
    }
delay(300);
}//LOOP
////////////////////////////////////////////////////////////////////////////////////////////////////////
void number(int data){
  int sum;
  sum=data/100;  a=sum;
  sum=data%100;  sum=sum*10;  data=sum;
  sum=data/100;  b=sum;
  sum=data%100;  sum=sum*10;  data=sum;
  sum=data/100;  c=sum;
  
}
////////////////////////////////////////////////////////////////////////////////////////////////////////
void shiftOut(int myDataPin, int myClockPin, byte myDataOut) {
  int i=0;
  int pinState;
  pinMode(myClockPin, OUTPUT);
  pinMode(myDataPin, OUTPUT);
 
  digitalWrite(myDataPin, 0);
  digitalWrite(myClockPin, 0);
 
  for (i=7; i>=0; i--)  
  {
    digitalWrite(myClockPin, 0);
        if( myDataOut & (1<<i) ) 
        {
	pinState= 1;
        }
            else 
            {
            pinState= 0;
            }
 
    digitalWrite(myDataPin, pinState);
    digitalWrite(myClockPin, 1);
    digitalWrite(myDataPin, 0);
  }
  digitalWrite(myClockPin, 0);
}
///////////////////////////////////////////////////////////////////////////////////////////////////////
long microsecondsToInches(long microseconds){
return microseconds / 74 / 2;
}
///////////////////////////////////////////////////////////////////////////////////////////////////////
long microsecondsToCentimeters(long microseconds){
return microseconds / 29 / 2;
}
///////////////////////////////////////////////////////////////////////////////////////////////////////
